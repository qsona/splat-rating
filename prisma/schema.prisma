// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["interactiveTransactions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String         @id @default(cuid())
  name         String
  createdAt    DateTime       @default(now())
  Rating       Rating[]
  JoinedUser   JoinedUser[]
  JoinableGame JoinableGame[]
  PlayingGame  PlayingGame[]
}

model JoinableGame {
  id               String   @id @default(cuid())
  discordChannelId String
  rule             String
  createdAt        DateTime @default(now())
  creatorUserId    String
  creator          User     @relation(fields: [creatorUserId], references: [id])
  totalGameCount   Int

  JoinedUser JoinedUser[]
  @@unique([discordChannelId])
}

model JoinedUser {
  id             String       @id @default(cuid())
  userId         String
  user           User         @relation(fields: [userId], references: [id])
  joinableGameId String
  joinableGame   JoinableGame @relation(fields: [joinableGameId], references: [id])
  createdAt      DateTime     @default(now())

  @@unique([joinableGameId, userId])
}

model PlayingGame {
  id               String   @id
  discordChannelId String
  rule             String
  creatorUserId    String
  creator          User     @relation(fields: [creatorUserId], references: [id])
  totalGameCount   Int
  currentGameCount Int
  createdAt        DateTime @default(now())

  @@unique([discordChannelId, creatorUserId])
}

model Rating {
  id     String @id @default(cuid())
  mu     Float
  sigma  Float
  userId String
  user   User   @relation(fields: [userId], references: [id])
  rule   String

  @@unique([userId, rule])
}

model GameResult {
  id                 String @id @default(cuid())
  winnerTeamsRatings Json
  loserTeamsRatings  Json
  beta               Float
  metadata           Json?
}

model GameMatching {
  id             String @id @default(cuid())
  teamsRatingIds Json
  metadata       Json?
  playingGameId  String @unique
  // playingGame    PlayingGame @relation(fields: [playingGameId], references: [id])
}
